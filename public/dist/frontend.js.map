{"version":3,"sources":["webpack://live-news/./node_modules/timeago.js/esm/lang/en_US.js","webpack://live-news/./node_modules/timeago.js/esm/lang/zh_CN.js","webpack://live-news/./node_modules/timeago.js/esm/register.js","webpack://live-news/./node_modules/timeago.js/esm/utils/dom.js","webpack://live-news/./node_modules/timeago.js/esm/utils/date.js","webpack://live-news/./node_modules/timeago.js/esm/realtime.js","webpack://live-news/./node_modules/timeago.js/esm/index.js","webpack://live-news/./src/js/lib/api.js","webpack://live-news/./src/js/lib/utils/events.js","webpack://live-news/./src/js/frontend.js"],"names":["EN_US","ZH_CN","Locales","register","locale","func","ATTR_TIMEAGO_TID","SEC_ARRAY","toDate","input","Date","isNaN","test","parseInt","trim","replace","TIMER_POOL","run","node","date","localeFunc","opts","tid","clearTimeout","clear","getAttribute","relativeDate","minInterval","diff","innerText","agoIn","totalSec","Math","abs","idx","length","floor","toString","setTimeout","min","max","rst","i","d","ceil","nextInterval","timerId","setAttribute","setTimerId","unit","esc","encodeURIComponent","getSanitizedParamsString","params","Object","keys","map","param","val","v","join","getParamsString","unix_timestamp_after","unix_timestamp_before","tags","number_of_particles","order_direction","output","Error","getSanitizeParams","publicApi","config","routes","last_request_timestamp","resolveParticles","res","json","then","particles","resolveUpdateParticles","request_timestamp","fetchParticles","fetch","getParticles","method","console","error","fetchParticlesUpdate","p","resetLastRequestTimestamp","_events","onAddParticle","fn","on","push","filter","_fn","listen","triggerAddParticle","$particle","payload","forEach","timeagoRegister","number","index","total_sec","$","selectors","isFetchUpdatesActive","$body","$root","rootId","$list","listId","$loadMore","loadMoreId","hooks","filterVisibleParticles","filterShowMoreIncrement","increment","filterHideShowMoreButton","hide","api","particlePool","numberOfVisibleParticles","children","sortByCreatedDate","a","b","created","merge","updateParticles","is_deleted","updateIds","id","deletedIds","particle","includes","isNotInDeleted","isNotInUpdate","sort","showMore","increase","getVisibleParticles","numberOf","slice","e","preventDefault","updateView","fetchParticlesTimeout","addClass","removeClass","timeagoize","LiveNews","listeners","show","num","autoFetchUpdates","isActive","updateTimestamp","getTime","position","html","find","remove","$newParticle","attr","modified","replaceWith","append","elementPosition","prepend","insertAfter","get","visibleCount","each","el","$el","$dates","nodes","getDateAttribute","jQuery"],"mappings":"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","file":"frontend.js","sourcesContent":["var EN_US = ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['just now', 'right now'];\n    var unit = EN_US[Math.floor(idx / 2)];\n    if (diff > 1)\n        unit += 's';\n    return [diff + \" \" + unit + \" ago\", \"in \" + diff + \" \" + unit];\n}\n//# sourceMappingURL=en_US.js.map","var ZH_CN = ['秒', '分钟', '小时', '天', '周', '个月', '年'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['刚刚', '片刻后'];\n    var unit = ZH_CN[~~(idx / 2)];\n    return [diff + \" \" + unit + \"\\u524D\", diff + \" \" + unit + \"\\u540E\"];\n}\n//# sourceMappingURL=zh_CN.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\n/**\n * All supported locales\n */\nvar Locales = {};\n/**\n * register a locale\n * @param locale\n * @param func\n */\nexport var register = function (locale, func) {\n    Locales[locale] = func;\n};\n/**\n * get a locale, default is en_US\n * @param locale\n * @returns {*}\n */\nexport var getLocale = function (locale) {\n    return Locales[locale] || Locales['en_US'];\n};\n//# sourceMappingURL=register.js.map","var ATTR_TIMEAGO_TID = 'timeago-id';\n/**\n * get the datetime attribute, `datetime` are supported.\n * @param node\n * @returns {*}\n */\nexport function getDateAttribute(node) {\n    return node.getAttribute('datetime');\n}\n/**\n * set the node attribute, native DOM\n * @param node\n * @param timerId\n * @returns {*}\n */\nexport function setTimerId(node, timerId) {\n    // @ts-ignore\n    node.setAttribute(ATTR_TIMEAGO_TID, timerId);\n}\n/**\n * get the timer id\n * @param node\n */\nexport function getTimerId(node) {\n    return parseInt(node.getAttribute(ATTR_TIMEAGO_TID));\n}\n//# sourceMappingURL=dom.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nvar SEC_ARRAY = [\n    60,\n    60,\n    24,\n    7,\n    365 / 7 / 12,\n    12,\n];\n/**\n * format Date / string / timestamp to timestamp\n * @param input\n * @returns {*}\n */\nexport function toDate(input) {\n    if (input instanceof Date)\n        return input;\n    // @ts-ignore\n    if (!isNaN(input) || /^\\d+$/.test(input))\n        return new Date(parseInt(input));\n    input = (input || '')\n        // @ts-ignore\n        .trim()\n        .replace(/\\.\\d+/, '') // remove milliseconds\n        .replace(/-/, '/')\n        .replace(/-/, '/')\n        .replace(/(\\d)T(\\d)/, '$1 $2')\n        .replace(/Z/, ' UTC') // 2017-2-5T3:57:52Z -> 2017-2-5 3:57:52UTC\n        .replace(/([+-]\\d\\d):?(\\d\\d)/, ' $1$2'); // -04:00 -> -0400\n    return new Date(input);\n}\n/**\n * format the diff second to *** time ago, with setting locale\n * @param diff\n * @param localeFunc\n * @returns\n */\nexport function formatDiff(diff, localeFunc) {\n    /**\n     * if locale is not exist, use defaultLocale.\n     * if defaultLocale is not exist, use build-in `en`.\n     * be sure of no error when locale is not exist.\n     *\n     * If `time in`, then 1\n     * If `time ago`, then 0\n     */\n    var agoIn = diff < 0 ? 1 : 0;\n    /**\n     * Get absolute value of number (|diff| is non-negative) value of x\n     * |diff| = diff if diff is positive\n     * |diff| = -diff if diff is negative\n     * |0| = 0\n     */\n    diff = Math.abs(diff);\n    /**\n     * Time in seconds\n     */\n    var totalSec = diff;\n    /**\n     * Unit of time\n     */\n    var idx = 0;\n    for (; diff >= SEC_ARRAY[idx] && idx < SEC_ARRAY.length; idx++) {\n        diff /= SEC_ARRAY[idx];\n    }\n    /**\n     * Math.floor() is alternative of ~~\n     *\n     * The differences and bugs:\n     * Math.floor(3.7) -> 4 but ~~3.7 -> 3\n     * Math.floor(1559125440000.6) -> 1559125440000 but ~~1559125440000.6 -> 52311552\n     *\n     * More information about the performance of algebraic:\n     * https://www.youtube.com/watch?v=65-RbBwZQdU\n     */\n    diff = Math.floor(diff);\n    idx *= 2;\n    if (diff > (idx === 0 ? 9 : 1))\n        idx += 1;\n    return localeFunc(diff, idx, totalSec)[agoIn].replace('%s', diff.toString());\n}\n/**\n * calculate the diff second between date to be formatted an now date.\n * @param date\n * @param relativeDate\n * @returns {number}\n */\nexport function diffSec(date, relativeDate) {\n    var relDate = relativeDate ? toDate(relativeDate) : new Date();\n    return (+relDate - +toDate(date)) / 1000;\n}\n/**\n * nextInterval: calculate the next interval time.\n * - diff: the diff sec between now and date to be formatted.\n *\n * What's the meaning?\n * diff = 61 then return 59\n * diff = 3601 (an hour + 1 second), then return 3599\n * make the interval with high performance.\n **/\nexport function nextInterval(diff) {\n    var rst = 1, i = 0, d = Math.abs(diff);\n    for (; diff >= SEC_ARRAY[i] && i < SEC_ARRAY.length; i++) {\n        diff /= SEC_ARRAY[i];\n        rst *= SEC_ARRAY[i];\n    }\n    d = d % rst;\n    d = d ? rst - d : rst;\n    return Math.ceil(d);\n}\n//# sourceMappingURL=date.js.map","import { setTimerId, getTimerId, getDateAttribute } from './utils/dom';\nimport { formatDiff, diffSec, nextInterval } from './utils/date';\nimport { getLocale } from './register';\n// all realtime timer\nvar TIMER_POOL = {};\n/**\n * clear a timer from pool\n * @param tid\n */\nvar clear = function (tid) {\n    clearTimeout(tid);\n    delete TIMER_POOL[tid];\n};\n// run with timer(setTimeout)\nfunction run(node, date, localeFunc, opts) {\n    // clear the node's exist timer\n    clear(getTimerId(node));\n    var relativeDate = opts.relativeDate, minInterval = opts.minInterval;\n    // get diff seconds\n    var diff = diffSec(date, relativeDate);\n    // render\n    node.innerText = formatDiff(diff, localeFunc);\n    var tid = setTimeout(function () {\n        run(node, date, localeFunc, opts);\n    }, Math.min(Math.max(nextInterval(diff), minInterval || 1) * 1000, 0x7fffffff));\n    // there is no need to save node in object. Just save the key\n    TIMER_POOL[tid] = 0;\n    setTimerId(node, tid);\n}\n/**\n * cancel a timer or all timers\n * @param node - node hosting the time string\n */\nexport function cancel(node) {\n    // cancel one\n    if (node)\n        clear(getTimerId(node));\n    // cancel all\n    // @ts-ignore\n    else\n        Object.keys(TIMER_POOL).forEach(clear);\n}\n/**\n * render a dom realtime\n * @param nodes\n * @param locale\n * @param opts\n */\nexport function render(nodes, locale, opts) {\n    // by .length\n    // @ts-ignore\n    var nodeList = nodes.length ? nodes : [nodes];\n    nodeList.forEach(function (node) {\n        run(node, getDateAttribute(node), getLocale(locale), opts || {});\n    });\n    return nodeList;\n}\n//# sourceMappingURL=realtime.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nimport en_US from './lang/en_US';\nimport zh_CN from './lang/zh_CN';\nimport { register } from './register';\nregister('en_US', en_US);\nregister('zh_CN', zh_CN);\nexport { format } from './format';\nexport { render, cancel } from './realtime';\nexport { register };\n//# sourceMappingURL=index.js.map","\n/**\n * shorten function for internal usage\n */\nconst esc = encodeURIComponent;\n\n/**\n * sanitize params and only return valid params\n * @param unix_timestamp\n * @param tags\n * @param output\n */\nconst getSanitizeParams = (\n\t{\n\t\tunix_timestamp_after = null,\n\t\tunix_timestamp_before = null,\n\t\ttags = null,\n\t\tnumber_of_particles = null,\n\t\torder_direction = null,\n\t\toutput = \"json\",\n\t} = {}\n)=>{\n\n\tconst params = {};\n\n\tif(unix_timestamp_after !== null){\n\t\tparams.unix_timestamp_after = parseInt(unix_timestamp_after);\n\t}\n\n\tif(unix_timestamp_before !== null){\n\t\tparams.unix_timestamp_before = parseInt(unix_timestamp_before);\n\t}\n\n\tif(number_of_particles !== null){\n\t\tparams.number_of_particles = parseInt(number_of_particles);\n\t}\n\n\tif(order_direction !== null) {\n\t\tparams.order_direction = order_direction;\n\t}\n\n\tif(tags !== null){\n\t\tif(typeof tags !== typeof []) throw new Error(\"Tags need to be an array of strings\");\n\t\tparams.tags = tags.map(esc);\n\t}\n\n\tif(output !== \"html\") output = \"json\";\n\tparams.output = output;\n\n\treturn params;\n\n};\n\n/**\n * stringify params\n * @param params\n * @return {string}\n */\nconst getParamsString = (params)=>{\n\treturn Object\n\t\t.keys(params)\n\t\t.map(param => {\n\t\t\tconst val = params[param];\n\t\t\tif(typeof val === typeof []){\n\t\t\t\treturn val.map(v=> `${param}[]=${v}`).join(\"&\");\n\t\t\t}\n\t\t\treturn param + \"=\" + params[param]\n\t\t})\n\t\t.join(\"&\");\n};\n\n/**\n * sanitize and stringify params\n * @param params\n * @return {string}\n */\nconst getSanitizedParamsString = (params)=>{\n\treturn getParamsString(getSanitizeParams(params));\n};\n\n\n/**\n * api for public use\n */\nexport const publicApi = (config) => {\n\n\tconst {routes} = config;\n\tlet last_request_timestamp = config.last_request_timestamp;\n\n\t/**\n\t * resolve particles response and save request timestamp\n\t * @param res\n\t * @return {*}\n\t */\n\tconst resolveParticles = (res)=>{\n\t\treturn res.json().then(json => json.particles );\n\t};\n\n\t/**\n\t * resolve particles response and save request timestamp\n\t * @param res\n\t * @return {*}\n\t */\n\tconst resolveUpdateParticles = (res)=>{\n\t\treturn res.json().then(json => {\n\t\t\tlast_request_timestamp = json.request_timestamp;\n\t\t\treturn json.particles\n\t\t});\n\t};\n\n\treturn {\n\t\tfetchParticles: (params)=>{\n\t\t\treturn fetch(routes.getParticles+\"?\"+getSanitizedParamsString(params),{\n\t\t\t\tmethod: 'GET',\n\t\t\t})\n\t\t\t.then(resolveParticles)\n\t\t\t.catch(console.error);\n\t\t},\n\t\tfetchParticlesUpdate: (params)=>{\n\t\t\tconst p = {\n\t\t\t\tunix_timestamp_after: last_request_timestamp,\n\t\t\t\torder_direction: \"DESC\",\n\t\t\t\t...params,\n\t\t\t};\n\t\t\treturn fetch(routes.getParticles+\"?\"+getSanitizedParamsString(p))\n\t\t\t\t.then(resolveUpdateParticles)\n\t\t\t\t.catch(console.error);\n\t\t},\n\t\tresetLastRequestTimestamp: ()=>{\n\t\t\tlast_request_timestamp = 0;\n\t\t}\n\t}\n};\n\nexport class PublicApi{\n\tconstructor(config){\n\t\tthis.api = publicApi(config);\n\t\tthis.fetchParticles = this.api.fetchParticles;\n\t\tthis.fetchParticlesUpdate = this.api.fetchParticlesUpdate;\n\t\tthis.resetLastRequestTimestamp = this.api.resetLastRequestTimestamp;\n\t}\n\n\tfetchParticles(params){\n\t\treturn this.api.fetchParticles(params);\n\t}\n\n\tfetchParticlesUpdate(params){\n\t\treturn this.api.fetchParticlesUpdate(params);\n\t}\n\n\tresetLastRequestTimestamp(){\n\t\tthis.api.resetLastRequestTimestamp();\n\t}\n}\n\n/**\n * api for admin use\n */\nexport const adminApi = (config)=>{\n\n\tconst {routes} = config;\n\tlet wp_rest_nonce = config.wp_rest_nonce;\n\tconst pApi = publicApi(config);\n\n\t/**\n\t * post request to backend and save new nonce of response\n\t * @param {string} route\n\t * @param {object} data\n\t * @param {string} method\n\t * @return {Promise<any | void>}\n\t */\n\tconst requestWithNonce = (route, data, method)=> fetch(route,{\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'X-WP-Nonce': wp_rest_nonce,\n\t\t\t},\n\t\t\tcredentials: 'include',\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(resolveNonce)\n\t\t\t.catch(console.error);\n\n\tconst postWithNonce = (route, data) => requestWithNonce(route, data, \"POST\");\n\tconst deleteWithNonce = (route, data) => requestWithNonce(route, data, \"DELETE\");\n\n\n\tconst resolveNonce = (json) => {\n\t\twp_rest_nonce = json.wp_rest_nonce;\n\t\treturn json;\n\t};\n\n\tconst attachmentCache = {};\n\n\treturn {\n\t\t...pApi,\n\t\tupdateParticle: (particle)=>{\n\t\t\t// TODO: sanitize particle data\n\t\t\treturn postWithNonce(routes.updateParticle, particle).then(json=>json.particle);\n\t\t},\n\t\tdeleteParticle: (particle_id)=>{\n\t\t\treturn deleteWithNonce(routes.deleteParticle, {particle_id});\n\t\t},\n\t\tfetchAttachment: (attachment_id)=>{\n\t\t\tif(typeof attachmentCache[attachment_id] === typeof {}){\n\t\t\t\treturn new Promise((resolve)=>{\n\t\t\t\t\tresolve(attachmentCache[attachment_id]);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn fetch(`/wp-json/wp/v2/media/${attachment_id}`)\n\t\t\t\t.then(res=>res.json())\n\t\t\t\t.then((attachment)=>{\n\t\t\t\tattachmentCache[attachment.id] = attachment;\n\t\t\t\treturn attachment;\n\t\t\t}).catch(()=>{\n\t\t\t\tattachmentCache[attachment_id] = {error:true};\n\t\t\t})\n\t\t},\n\t\tuploadAttachment: (form, onRightBeforeUpload = null) => {\n\t\t\treturn new Promise((resolve, reject)=>{\n\t\t\t\t// TODO: catch errors\n\t\t\t\t// use fetch api?\n\t\t\t\tconst formData = new FormData(form);\n\t\t\t\tif(onRightBeforeUpload) onRightBeforeUpload();\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: routes.upload,\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\tcache       : false,\n\t\t\t\t\tcontentType : false,\n\t\t\t\t\tprocessData : false,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t// 'Content-Type': 'application/json',\n\t\t\t\t\t\t'X-WP-Nonce': wp_rest_nonce,\n\t\t\t\t\t},\n\t\t\t\t\tdata: formData,\n\t\t\t\t\tsuccess: (json)=>{\n\t\t\t\t\t\tresolve(resolveNonce(json));\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t});\n\n\t\t},\n\t}\n};\n\nexport class AdminApi extends PublicApi{\n\tconstructor(config){\n\t\tsuper(config);\n\t\tthis.adminApi = adminApi(config);\n\t}\n\tupdateParticle(particle){\n\t\treturn this.adminApi.updateParticle(particle);\n\t}\n}","\n// ----------------------\n// basics\n// ----------------------\nconst _events = {};\n\nexport const listen = (on,fn)=>{\n    if(typeof _events[on] === typeof undefined){\n        _events[on] = [];\n    }\n    _events[on].push(fn);\n\n    // off function\n    return ()=>{\n        _events[on] = _events[on].filter((_fn)=> _fn !== fn);\n    };\n};\n\nexport const trigger = (on, payload)=>{\n    if(typeof _events[on] !== typeof []) return;\n    _events[on].forEach((fn)=>{\n        fn(payload);\n    });\n};\n\nexport const onAddParticle = (fn)=> listen(\"particleAdd\", fn);\nexport const triggerAddParticle = ($particle)=> trigger(\"particleAdd\", $particle);\n\nexport const onUpdateParticle = (fn)=> listen(\"particleUpdate\", fn);\nexport const triggerUpdateParticle = ($particle)=> trigger(\"particleUpdate\", $particle);\n\nexport const onRemoveParticle = (fn)=> listen(\"particleRemove\", fn);\nexport const triggerRemoveParticle = ($particle)=> trigger(\"particleRemove\", $particle);\n\n// ----------------------\n// for public free usage\n// ----------------------\nexport default {\n    listen,\n    trigger,\n\n    onAddParticle,\n    triggerAddParticle,\n\n    onUpdateParticle,\n    triggerUpdateParticle,\n\n    onRemoveParticle,\n    triggerRemoveParticle,\n}","import {render as timeagoRender, register as timeagoRegister} from 'timeago.js';\nimport {publicApi} from './lib/api';\nimport {listen, trigger, onAddParticle, triggerAddParticle} from './lib/utils/events';\n\n// the local dict example is below.\nconst localeFunc = (number, index, total_sec) => {\n    // number: the timeago / timein number;\n    // index: the index of array below;\n    // total_sec: total seconds between date to be formatted and today's date;\n    return [\n        ['jetzt', 'jetzt'],\n        ['vor %s Sekunden', 'in %s Sekunden'],\n        ['vor 1 Minute', 'in 1 Minute'],\n        ['vor %s Minuten', 'in %s Minuten'],\n        ['vor 1 Stunde', 'in einer Stunde'],\n        ['vor %s Stunden', 'in %s Stunden'],\n        ['vor 1 Tag', 'in 1 Tag'],\n        ['vor %s Tagen', 'in %s Tagen'],\n        ['vor 1 Woche', 'in 1 Woche'],\n        ['vor %s Wochen', 'in %s Wochen'],\n        ['vor 1 Monat', 'in 1 Monat'],\n        ['vor %s Monaten', 'in %s Monaten'],\n        ['vor 1 Jahr', 'in 1 Jahr'],\n        ['vor %s Jahren', 'in %s Jahr']\n    ][index];\n};\n// register your locale with timeago\ntimeagoRegister('de_DE', localeFunc);\n\n(function ($, config) {\n\n    const {selectors} = config;\n\n    let {isFetchUpdatesActive} = config;\n\n    const $body = $(\"body\");\n    const $root = $(\"#\" + selectors.rootId);\n    const $list = $(\"#\" + selectors.listId);\n    const $loadMore = $(\"#\" + selectors.loadMoreId);\n\n    //------------------------------------------------------------------------\n    // hooks\n    //------------------------------------------------------------------------\n    const hooks = {\n        filterVisibleParticles: (particles) => particles,\n        filterShowMoreIncrement: (increment) => increment,\n        filterHideShowMoreButton: (hide) => hide,\n    };\n\n    //------------------------------------------------------------------------\n    // if important elements are missing in frontend, we cannot help\n    //------------------------------------------------------------------------\n    if ($root.length !== 1 || $list.length !== 1) {\n        console.error(\"Missing root and list ids\", selectors);\n        return;\n    }\n\n    //------------------------------------------------------------------------\n    // objects and vars\n    //------------------------------------------------------------------------\n    const api = publicApi(config);\n    let particlePool = [];\n    let numberOfVisibleParticles = $list.children().length;\n\n    //------------------------------------------------------------------------\n    // particle pool functions\n    //------------------------------------------------------------------------\n    const isNotInDeleted = (deletedIds) => {\n        return (particle) => !deletedIds.includes(particle.id);\n    };\n    const isNotInUpdate = (updateIds) => {\n        return (particle) => !updateIds.includes(particle.id);\n    };\n    const sortByCreatedDate = (a,b) => b.created - a.created;\n\n    const merge = (particles) => {\n        const updateParticles = particles.filter(p => !p.is_deleted);\n        const updateIds = updateParticles.map(p => p.id);\n        const deletedIds = particles.filter(p => p.is_deleted).map(p=> p.id);\n        particlePool = particlePool\n            .filter(isNotInDeleted(deletedIds))\n            .filter(isNotInUpdate(updateIds));\n        for(let particle of updateParticles){\n            particlePool.push(particle);\n        }\n        particlePool.sort(sortByCreatedDate);\n    };\n\n    const getParticles = () => [...particlePool];\n\n    const show = (num) => numberOfVisibleParticles = num;\n    const showMore = (increase = 5)=> numberOfVisibleParticles += increase;\n\n    const getVisibleParticles = (particles = getParticles(), numberOf = numberOfVisibleParticles) => {\n        return hooks.filterVisibleParticles(\n            getParticles().slice(0, numberOf)\n        );\n    };\n\n    //------------------------------------------------------------------------\n    // loadmore button\n    //------------------------------------------------------------------------\n    if($loadMore.length){\n        $loadMore.on(\"click\", function(e){\n            e.preventDefault();\n            showMore(hooks.filterShowMoreIncrement(5));\n            updateView();\n        });\n    }\n\n    //------------------------------------------------------------------------\n    // start pulling news\n    //------------------------------------------------------------------------\n    let fetchParticlesTimeout = null;\n    function fetchParticlesUpdate() {\n        clearTimeout(fetchParticlesTimeout);\n        if(!isFetchUpdatesActive) return;\n\n        $body.addClass(\"live-news-status__is-fetching-update\");\n\n        api.fetchParticlesUpdate({\n            output: \"html\",\n        }).then(function (particles) {\n\n            $body.removeClass(\"live-news-status__is-fetching-update\");\n\n            $body.addClass(\"live-news-status__fetched-update\");\n            setTimeout(function () {\n                $body.removeClass(\"live-news-status__fetched-update\");\n            }, 500);\n\n            showMore(particles.length);\n\n            // merge into pool\n            merge(particles);\n\n            // TODO: watch for problems\n            const success = updateView();\n            if (success) {\n                fetchParticlesTimeout = setTimeout(fetchParticlesUpdate, 5000);\n            } else {\n                console.error(\"something went wrong...\");\n            }\n        });\n    }\n\n    //------------------------------------------------------------------------\n    // load all particles once\n    //------------------------------------------------------------------------\n    $body.addClass(\"live-news-status__is-fetching\");\n    api.fetchParticles({\n        output: \"html\",\n    }).then((particles)=>{\n        $body.removeClass(\"live-news-status__is-fetching\");\n        merge(particles);\n        // start fetching updates\n        fetchParticlesUpdate();\n    });\n\n    //------------------------------------------------------------------------\n    // update view with particle modifications\n    // 1. take list of particles\n    // 2. creates, updates or adds particle to list\n    // hides all elements that are in dom but no in particles list\n    //------------------------------------------------------------------------\n    function updateView(particles = getVisibleParticles()) {\n\n        const updateTimestamp = new Date().getTime();\n\n        if(typeof particles !== typeof [] || particles.length < 1) return false;\n\n        let position = -1;\n        for (let p of particles) {\n\n            position++;\n\n            const {id, html} = p;\n            const $particle = $list.find(`[data-particle-id=${id}]`);\n\n            if(p.is_deleted){\n                // DELETE\n                $particle.remove();\n                position--;\n                continue;\n            }\n\n            let $newParticle = $(html);\n            $newParticle.attr(\"data-update-timestamp\", updateTimestamp);\n            $newParticle.attr(\"data-particle-modified\", p.modified);\n\n            // add or modify content\n            if($particle.length) {\n                if($particle.attr(\"data-particle-modified\") !== $newParticle.attr(\"data-particle-modified\")){\n                    // UPDATE\n                    $particle.replaceWith($newParticle);\n                } else {\n                    $particle.attr(\"data-update-timestamp\", updateTimestamp);\n                    $newParticle = $particle;\n                }\n            } else {\n                // INSERT\n                $list.append($newParticle);\n\n                triggerAddParticle($newParticle);\n            }\n\n            // sync order\n            const elementPosition = $newParticle.index();\n            if(elementPosition !== position) {\n                if(position === 0){\n                    $list.prepend($newParticle);\n                } else {\n                    $newParticle.insertAfter($list.children().get(position-1));\n                }\n\n            }\n\n            // start timeago\n            timeagoize($newParticle.find(\".timeago\"));\n        }\n\n        let visibleCount = 0;\n        $list.children().each((index, el)=>{\n            const $el = $(el);\n            if($el.attr(\"data-update-timestamp\") !== updateTimestamp+\"\"){\n                $el.hide();\n            } else {\n                $el.show();\n                visibleCount++;\n            }\n        });\n\n        if( hooks.filterHideShowMoreButton(visibleCount >= particlePool.length) ){\n            $body.addClass(\"live-news-status__all-visible\");\n        } else {\n            $body.removeClass(\"live-news-status__all-visible\");\n        }\n\n        return true;\n    }\n\n\n    //------------------------------------------------------------------------\n    // update view with particle modifications\n    //------------------------------------------------------------------------\n    function timeagoize($dates) {\n        timeagoRender($dates.get(), 'de_DE');\n    }\n\n    // initial timeago for php rendered elements\n    timeagoize($('.timeago'));\n\n    //------------------------------------------------------------------------\n    // public object\n    //------------------------------------------------------------------------\n    LiveNews.api = api;\n    LiveNews.timeagoize = timeagoize;\n    LiveNews.listeners = {\n        onAddParticle,\n    };\n\n    LiveNews.numberOfVisibleParticles = ()=> numberOfVisibleParticles;\n    LiveNews.showMore = showMore;\n    LiveNews.show = show;\n    LiveNews.getParticles = getParticles;\n\n    LiveNews.hooks = hooks;\n    LiveNews.updateView = updateView;\n\n    /**\n     * @param {boolean} isActive\n     */\n    LiveNews.autoFetchUpdates = (isActive)=>{\n        isFetchUpdatesActive = isActive;\n        fetchParticlesUpdate();\n    };\n\n\n})(jQuery, LiveNews);"],"sourceRoot":""}